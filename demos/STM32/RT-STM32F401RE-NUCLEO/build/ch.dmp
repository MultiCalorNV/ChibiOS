
build/ch.elf:     file format elf32-littlearm
build/ch.elf
architecture: arm, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x08000401

Program Header:
    LOAD off    0x00008000 vaddr 0x08000000 paddr 0x08000000 align 2**15
         filesz 0x00002a54 memsz 0x00002a58 flags rwx
    LOAD off    0x00010800 vaddr 0x20000800 paddr 0x08002a58 align 2**15
         filesz 0x0000083c memsz 0x0000083c flags rw-
    LOAD off    0x00018000 vaddr 0x20000000 paddr 0x20000000 align 2**15
         filesz 0x00000000 memsz 0x000013b4 flags rw-
private flags = 5000202: [Version5 EABI] [soft-float ABI] [has entry point]

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 startup       000001c0  08000000  08000000  00008000  2**4
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002894  080001c0  080001c0  000081c0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .textalign    00000004  08002a54  08002a54  0000aa54  2**0
                  ALLOC
  3 .stacks       00000800  20000000  20000000  00018000  2**0
                  ALLOC
  4 .data         0000083c  20000800  08002a58  00010800  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  5 .bss          00000378  2000103c  2000103c  00018000  2**3
                  ALLOC
  6 .ARM.attributes 0000002f  00000000  00000000  0001103c  2**0
                  CONTENTS, READONLY
  7 .comment      00000070  00000000  00000000  0001106b  2**0
                  CONTENTS, READONLY
  8 .debug_info   00016331  00000000  00000000  000110db  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_abbrev 00004f6a  00000000  00000000  0002740c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00004adb  00000000  00000000  0002c376  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_aranges 00000838  00000000  00000000  00030e51  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000010a0  00000000  00000000  00031689  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_line   000063ce  00000000  00000000  00032729  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    000029aa  00000000  00000000  00038af7  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_frame  00001790  00000000  00000000  0003b4a4  2**2
                  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
08000000 l    d  startup	00000000 startup
080001c0 l    d  .text	00000000 .text
08002a54 l    d  .textalign	00000000 .textalign
20000000 l    d  .stacks	00000000 .stacks
20000800 l    d  .data	00000000 .data
2000103c l    d  .bss	00000000 .bss
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    df *ABS*	00000000 vectors.c
00000000 l    df *ABS*	00000000 main.c
08001e10 l     F .text	00000034 Thread1
08001e50 l     F .text	00000028 chprintf.constprop.3
20001230 l     O .bss	00000148 waThread1
20001378 l     O .bss	00000004 Debug_ITMDebug
00000000 l    df *ABS*	00000000 build/obj/chcoreasm_v7m.o
0000000c l       *ABS*	00000000 CONTEXT_OFFSET
e000ed04 l       *ABS*	00000000 SCB_ICSR
10000000 l       *ABS*	00000000 ICSR_PENDSVSET
00000000 l    df *ABS*	00000000 lib_a-memcpy.o
00000000 l    df *ABS*	00000000 crt0.c
00000000 l    df *ABS*	00000000 chcore_v7m.c
00000000 l    df *ABS*	00000000 chsys.c
08000580 l     F .text	00000014 _idle_thread
00000000 l    df *ABS*	00000000 chtm.c
00000000 l    df *ABS*	00000000 chschd.c
08000760 l     F .text	00000070 wakeup
00000000 l    df *ABS*	00000000 chvt.c
00000000 l    df *ABS*	00000000 chthreads.c
00000000 l    df *ABS*	00000000 chmtx.c
00000000 l    df *ABS*	00000000 chevents.c
00000000 l    df *ABS*	00000000 chqueues.c
00000000 l    df *ABS*	00000000 chmemcore.c
20001190 l     O .bss	00000004 endmem
20001194 l     O .bss	00000004 nextmem
00000000 l    df *ABS*	00000000 chheap.c
08001070 l     F .text	00000024 chprintf.constprop.0
20001198 l     O .bss	00000020 default_heap
00000000 l    df *ABS*	00000000 hal.c
080011c0 l     F .text	00000028 chprintf.constprop.0
00000000 l    df *ABS*	00000000 serial.c
08001240 l     F .text	00000006 readt
08001250 l     F .text	0000000a read
08001260 l     F .text	00000006 writet
08001270 l     F .text	0000000a write
08001280 l     F .text	00000006 gett
08001290 l     F .text	0000000a get
080012a0 l     F .text	00000006 putt
080012b0 l     F .text	0000000a put
08002870 l     O .text	00000020 vmt
00000000 l    df *ABS*	00000000 st.c
00000000 l    df *ABS*	00000000 nvic.c
00000000 l    df *ABS*	00000000 hal_lld.c
00000000 l    df *ABS*	00000000 pal_lld.c
00000000 l    df *ABS*	00000000 st_lld.c
00000000 l    df *ABS*	00000000 serial_lld.c
08001670 l     F .text	00000010 notify2
00000000 l    df *ABS*	00000000 board.c
00000000 l    df *ABS*	00000000 syscalls.c
00000000 l    df *ABS*	00000000 chprintf.c
08001800 l     F .text	00000044 long_to_string_with_divisor.constprop.0
00000000 l    df *ABS*	00000000 ITM_trace.c
08001b60 l     F .text	00000004 get
08001b70 l     F .text	00000004 reads
08001b80 l     F .text	0000000c put
08001b90 l     F .text	0000001a writes
08002950 l     O .text	00000010 vmt
00000000 l    df *ABS*	00000000 ArrayCopy.c
00000000 l    df *ABS*	00000000 ArrayList.c
08001c50 l     F .text	00000024 chprintf.constprop.2
00000000 l    df *ABS*	00000000 calloc.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 malloc.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mlock.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 chregistry.c
00000000 l    df *ABS*	00000000 impure.c
20000800 l     O .data	00000428 impure_data
00000000 l    df *ABS*	00000000 
08002a58 l       .stacks	00000000 _etext
00000000 l       *UND*	00000000 msObjectInit
00018000 l       *ABS*	00000000 __ram_size__
00000000 l       *UND*	00000000 chDbgPanic
00000000 l       startup	00000000 _text
20000000 l       startup	00000000 __ram_start__
20018000 l       *ABS*	00000000 __ram_end__
200013b4 l       .bss	00000000 _end
00000400 l       *ABS*	00000000 __main_stack_size__
00000400 l       *ABS*	00000000 __process_stack_size__
08002890 g     O .text	000000a8 pal_default_config
08000500  w    F .text	00000002 Vector58
08000500  w    F .text	00000002 VectorE8
08000500  w    F .text	00000002 Vector9C
08001390 g     F .text	00000032 nvicEnableVector
08000500  w    F .text	00000002 VectorAC
08000640 g     F .text	00000078 chSysTimerHandlerI
08000b70 g     F .text	0000000a chThdExit
08000d60 g     F .text	0000002a chEvtBroadcastFlagsI
08000850 g     F .text	00000044 chSchGoSleepTimeoutS
08000500  w    F .text	00000002 DebugMon_Handler
08000500  w    F .text	00000002 Vector1A0
08000be0 g     F .text	000000c8 chMtxLockS
08001da0 g     F .text	00000070 print
08000500  w    F .text	00000002 Vector5C
08000500  w    F .text	00000002 Vector11C
08000500  w    F .text	00000002 HardFault_Handler
08000500  w    F .text	00000002 Vector1B8
08000500  w    F .text	00000002 Vector19C
08002540 g     F .text	00000002 __malloc_unlock
08000d90 g     F .text	0000001e chIQObjectInit
080006c0 g     F .text	0000000c chTMStartMeasurementX
08000500  w    F .text	00000002 Vector8C
08000500  w    F .text	00000002 SysTick_Handler
08000500  w    F .text	00000002 VectorDC
08000500  w    F .text	00000002 PendSV_Handler
08000500  w    F .text	00000002 Vector168
08000500  w    F .text	00000002 NMI_Handler
08000000 g     O startup	000001c0 _vectors
08000820 g     F .text	00000024 chSchGoSleepS
08000500  w    F .text	00000002 Vector110
08000b80 g     F .text	00000028 chThdEnqueueTimeoutS
200013b4 g       .bss	00000000 __heap_base__
08000500  w    F .text	00000002 Vector120
08000500  w    F .text	00000002 VectorC8
080008a0 g     F .text	00000058 chSchWakeupS
08001310 g     F .text	0000003c sdIncomingDataI
08000f30 g     F .text	00000034 chOQGetI
080007d0 g     F .text	00000014 _scheduler_init
08000a90 g     F .text	00000080 chThdCreateStatic
08000500  w    F .text	00000002 Vector94
08000500  w    F .text	00000002 VectorA8
080002a0 g     F .text	00000134 memcpy
08001bc0 g     F .text	0000008a arrayCopy
08001630 g     F .text	0000003c st_lld_init
08000500  w    F .text	00000002 VectorB4
08001360 g     F .text	00000010 stStartAlarm
08000ec0 g     F .text	0000001c chOQObjectInit
200011b8 g     O .bss	00000078 SD2
080007f0 g     F .text	0000002c chSchReadyI
080006d0 g     F .text	00000048 chTMStopMeasurementX
080001c0 g       startup	00000000 __fini_array_end
20000800 g       .stacks	00000000 __main_thread_stack_end__
08000970 g     F .text	0000001c _vt_init
080010a0 g     F .text	0000001c _heap_init
08000500  w    F .text	00000002 Vector74
080011f0 g     F .text	00000048 halInit
08000500  w    F .text	00000002 Vector160
08000500  w    F .text	00000002 Vector1B0
08000500  w    F .text	00000002 UsageFault_Handler
08000720 g     F .text	00000038 _tm_init
08000500  w    F .text	00000002 VectorEC
2000103c g       .bss	00000000 _bss_start
20001388 g     O .bss	00000004 __malloc_top_pad
20018000 g       *ABS*	00000000 __heap_end__
08000500  w    F .text	00000002 Vector40
080017e0 g     F .text	00000018 _sbrk_r
08000500  w    F .text	00000002 VectorF8
08000500  w    F .text	00000002 Vector108
08001370 g     F .text	0000000a stStopAlarm
08000e40 g     F .text	00000074 chIQReadTimeout
08000500  w    F .text	00000002 VectorBC
08000500  w    F .text	00000002 Vector190
08000500  w    F .text	00000002 Vector150
08000500  w    F .text	00000002 Vector124
20001384 g     O .bss	00000004 __malloc_max_sbrked_mem
080013d0 g     F .text	00000064 hal_lld_init
08000b30 g     F .text	00000040 chThdExitS
08000500  w    F .text	00000002 Vector148
08000500  w    F .text	00000002 Vector188
08001850 g     F .text	0000030c chvprintf
08000500  w    F .text	00000002 Vector198
08000500  w    F .text	00000002 Vector118
08000500  w    F .text	00000002 Vector64
200013b4 g       .bss	00000000 _bss_end
080003f0  w    F .text	00000002 _default_exit
08000400 g     F .text	00000100 Reset_Handler
08001350 g     F .text	00000004 stInit
08000500  w    F .text	00000002 VectorCC
08001ef0 g     F .text	00000010 calloc
080017a0 g     F .text	00000020 sd_lld_init
08000500  w    F .text	00000002 Vector54
08000500  w    F .text	00000002 Vector98
08001bb0 g     F .text	0000000c itmObjectInit
08001680 g     F .text	0000011c VectorD8
08000500  w    F .text	00000002 Vector138
08000500  w    F .text	00000002 Vector24
08000cb0 g     F .text	00000014 chMtxLock
08001cc0 g     F .text	00000090 add
08000500  w    F .text	00000002 Vector1AC
08000960 g     F .text	00000004 chSchDoReschedule
080005a0 g     F .text	00000098 chSysInit
08000500  w    F .text	00000002 Vector178
08000b10 g     F .text	00000018 chThdSleep
08000500  w    F .text	00000002 Vector84
08001440 g     F .text	000000b8 stm32_clock_init
08000500  w    F .text	00000002 Vector1A4
08001500 g     F .text	00000104 _pal_lld_init
080025f0 g     F .text	000001b0 _free_r
080012c0 g     F .text	00000004 sdInit
08000bd0 g     F .text	0000000a chMtxObjectInit
08000500  w    F .text	00000002 VectorD0
20001038 g     O .data	00000004 __malloc_sbrk_base
08001000 g     F .text	00000028 _core_init
08000500  w    F .text	00000002 Vector1B4
08000500  w    F .text	00000002 Vector140
08000500  w    F .text	00000002 VectorE4
08000500  w    F .text	00000002 VectorC0
08000500  w    F .text	00000002 Vector158
08000500  w    F .text	00000002 Vector130
08000270 g     F .text	00000000 _port_switch
2000138c g     O .bss	00000028 __malloc_current_mallinfo
08001380 g     F .text	00000008 stSetAlarm
080003e0  w    F .text	00000002 __late_init
08001c80 g     F .text	0000002c initWithSizeAndIncRate
08000530 g     F .text	00000050 _port_irq_epilogue
08000500  w    F .text	00000002 Vector134
08001030 g     F .text	00000038 chCoreAlloc
080010c0 g     F .text	000000f8 chHeapAlloc
08000500  w    F .text	00000002 VectorF0
08000500  w    F .text	00000002 Vector12C
08001cb0 g     F .text	00000008 init
08000500  w    F .text	00000002 Vector13C
20000c2c g     O .data	00000408 __malloc_av_
08000500  w    F .text	00000002 Vector100
08002a58 g       .stacks	00000000 _textdata
08000500  w    F .text	00000002 VectorE0
08000500  w    F .text	00000002 VectorF4
08002530 g     F .text	00000002 __malloc_lock
080001c0 g       startup	00000000 __fini_array_start
08001f00 g     F .text	0000005e _calloc_r
08002490 g     F .text	0000009a memset
08000500  w    F .text	00000002 MemManage_Handler
080001c0 g     F .text	000000a8 main
08000500  w    F .text	00000002 Vector6C
20001380 g     O .bss	00000004 __malloc_max_total_mem
08000500  w    F .text	00000002 VectorA0
2000137c g     O .bss	00000004 itm_port
08000510 g     F .text	00000012 SVC_Handler
080001c0 g       startup	00000000 __init_array_end
08001f70 g     F .text	0000051c _malloc_r
08000500  w    F .text	00000002 VectorC4
08000500  w    F .text	00000002 Vector7C
08000500  w    F .text	00000002 Vector180
08001ec0 g     F .text	00000028 Debug_ITMDebugOutputChar
08000f70 g     F .text	0000008a chOQWriteTimeout
08001610 g     F .text	00000020 VectorB0
08002550 g     F .text	0000009c _malloc_trim_r
080027b0 g     O .text	00000016 ch_debug
08000500  w    F .text	00000002 Vector90
08000d30 g     F .text	0000002a chEvtSignalI
08000500  w    F .text	00000002 Vector114
08000280 g     F .text	00000000 _port_thread_start
08000500  w    F .text	00000002 Vector164
08000500  w    F .text	00000002 Vector60
08000500  w    F .text	00000002 Vector1C
08000920 g     F .text	0000003c chSchDoRescheduleAhead
08000500  w    F .text	00000002 Vector1BC
08000500  w    F .text	00000002 Vector17C
08000bb0 g     F .text	0000001e chThdDequeueNextI
08000500  w    F .text	00000002 Vector48
20000400 g       .stacks	00000000 __process_stack_base__
08000500  w    F .text	00000002 Vector1A8
08000500  w    F .text	00000002 Vector16C
20000c28 g     O .data	00000004 _impure_ptr
08000500  w    F .text	00000002 Vector70
08000500  w    F .text	00000002 VectorD4
08000a00 g     F .text	00000050 chVTDoResetI
08000df0 g     F .text	0000004e chIQGetTimeout
20000800 g       .data	00000000 _data
08000500  w    F .text	00000002 Vector4C
08000500  w    F .text	00000002 Vector144
08000500  w    F .text	00000002 Vector80
08000db0 g     F .text	00000036 chIQPutI
0800028e g     F .text	00000000 _port_switch_from_isr
08000500  w    F .text	00000002 Vector15C
08000500  w    F .text	00000002 Vector68
08000cd0 g     F .text	00000060 chMtxUnlock
20000400 g       .stacks	00000000 __main_stack_end__
08000500  w    F .text	00000002 Vector78
2000103c g       .data	00000000 _edata
08000500 g     F .text	00000002 _unhandled_exception
08000500  w    F .text	00000002 Vector170
080012d0 g     F .text	00000040 sdObjectInit
08000500  w    F .text	00000002 Vector88
20001034 g     O .data	00000004 __malloc_trim_threshold
20000400 g       .stacks	00000000 __main_thread_stack_base__
08000990 g     F .text	00000070 chVTDoSetI
08000500  w    F .text	00000002 Vector104
08000500  w    F .text	00000002 Vector184
08000500  w    F .text	00000002 Vector10C
08000292 g       .text	00000000 _port_exit_from_isr
080001c0 g       startup	00000000 __init_array_start
08001d50 g     F .text	00000042 insert
08000900 g     F .text	00000018 chSchIsPreemptionRequired
08000500  w    F .text	00000002 Vector14C
08000a50 g     F .text	00000040 _thread_init
08000500  w    F .text	00000002 BusFault_Handler
08000500  w    F .text	00000002 Vector50
20001040 g     O .bss	00000150 ch
08000500  w    F .text	00000002 Vector194
08000500  w    F .text	00000002 Vector154
08000ee0 g     F .text	00000050 chOQPutTimeout
20000000 g       .stacks	00000000 __main_stack_base__
08000500  w    F .text	00000002 Vector44
08000500  w    F .text	00000002 Vector28
080017d0 g     F .text	00000002 boardInit
08000500  w    F .text	00000002 VectorB8
08000500  w    F .text	00000002 VectorFC
08001e80 g     F .text	00000034 Debug_ITMDebugEnable
20000800 g       .stacks	00000000 __process_stack_end__
08000500  w    F .text	00000002 Vector34
080017c0 g     F .text	00000004 __early_init
08000500  w    F .text	00000002 Vector128
08000500  w    F .text	00000002 VectorA4
08000500  w    F .text	00000002 Vector20
08001f60 g     F .text	00000010 free
08000500  w    F .text	00000002 Vector18C
08000500  w    F .text	00000002 Vector174


